trigger:
- main  

pool:
  vmImage: 'windows-latest'  

variables:
  buildConfiguration: 'Release'
  versionStampFile: 'VersionStamp.txt'
  targetDirectory: 'C:\\IT'
  smtpServer: 'smtp.gmail.com' 
  smtpPort: 587
  smtpUsername: 'soldierwaat@gmail.com'
  smtpPassword: '332696046Qq!A'
  smtpFrom: 'soldierwaat@gmail.com'
  smtpTo: 'artemegorov2517@example.com'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- script: |
    python -m venv venv
    venv\Scripts\activate
    pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    venv\Scripts\activate
    pytest
  displayName: 'Run tests'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- powershell: |
    .\copyArtifacts.ps1 -buildArtifactStagingDirectory $(Build.ArtifactStagingDirectory) -targetDirectory $(targetDirectory) -versionStampFile $(versionStampFile)
  displayName: 'Update and copy VersionStamp.txt'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- powershell: |
    $smtpServer = '$(smtpServer)'
    $smtpFrom = '$(smtpFrom)'
    $smtpTo = '$(smtpTo)'
    $smtpUsername = '$(smtpUsername)'
    $smtpPassword = '$(smtpPassword)'
    $buildId = $env:BUILD_BUILDID
    $buildStatus = $env:BUILD_BUILDSTATUS
    $messageSubject = "Build $buildId $buildStatus"
    $messageBody = "The build $buildId has $buildStatus."

    $message = New-Object system.net.mail.mailmessage
    $message.from = $smtpFrom
    $message.To.add($smtpTo)
    $message.Subject = $messageSubject
    $message.Body = $messageBody
    $smtp = New-Object Net.Mail.SmtpClient($smtpServer)
    $smtp.Credentials = New-Object System.Net.NetworkCredential($smtpUsername, $smtpPassword)
    $smtp.EnableSsl = $true
    $smtp.Send($message)
  displayName: 'Send email'

